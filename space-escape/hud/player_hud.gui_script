function init(self)
	-- Store references to the health and ammo nodes
	self.health_nodes = {
		gui.get_node("health"),
		gui.get_node("health1"),
		gui.get_node("health2"),
		gui.get_node("health3")
	}
	self.ammo_nodes = {
		gui.get_node("ammo"),
		gui.get_node("ammo1"),
		gui.get_node("ammo2"),
		gui.get_node("ammo3")
	}

	self.score_node = gui.get_node("score")

	-- Start with all ammo nodes disabled
	for _, node in ipairs(self.ammo_nodes) do
		gui.set_enabled(node, false)
	end
end

function on_message(self, message_id, message, sender)
	-- Handle health update
	if message_id == hash("update_health") then
		local health = message.health or 0
		for i, node in ipairs(self.health_nodes) do
			gui.set_enabled(node, i <= health)
		end
	end

	-- Handle ammo update
	if message_id == hash("update_ammo") then
		local ammo = message.ammo or 0
			-- Enable/Disable ammo nodes based on ammo count
			for i, node in ipairs(self.ammo_nodes) do
				if i <= ammo then
					gui.set_enabled(node, true)  -- Enable the node
				else
					gui.set_enabled(node, false)  -- Disable the node
				end
			end
		end

	-- Handle score update
	if message_id == hash("update_score") then
		local score = message.score or 0
		local formatted_score = string.format("%04d", score)
		gui.set_text(self.score_node, formatted_score)
	end
end
