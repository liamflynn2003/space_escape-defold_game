
local ITEM_SPAWN_INTERVAL = 6 -- Seconds between item spawns
local DEFAULT_ITEM_SPAWN_POSITION = vmath.vector3(600, 145, 0) -- Item spawn position

local last_item_spawned = nil -- Last item spawned (1 = Ammo, 2 = Health)
local item_spawn_count = 0 -- Count of consecutive spawns of the same item

function init(self)
	self.item_spawn_timer = 0
	self.last_item_spawned = nil -- Last item spawned (1 = Ammo, 2 = Health)
	self.item_spawn_count = 0 -- Count of consecutive spawns of the same item
	math.randomseed(os.time())
end

function spawn_item()
	-- Determine the item type to spawn
	local item_type
	if item_spawn_count >= 2 then
		-- Alternate item type if the same item was spawned twice
		repeat
			item_type = math.random(1, 3) -- 1 = Ammo, 2 = Health, 3 = Coin
		until item_type ~= last_item_spawned
		item_spawn_count = 0
	else
		-- Randomly pick an item type, ensuring no repeats
		repeat
			item_type = math.random(1, 2) -- Include Coin in random selection
		until item_type ~= last_item_spawned
	end

	-- Spawn the item
	if item_type == 1 then
		-- Spawn ammo
		collectionfactory.create("#ammofactory", DEFAULT_ITEM_SPAWN_POSITION, nil, {}, 1)
	elseif item_type == 2 then
		-- Spawn health
		collectionfactory.create("#healthfactory", DEFAULT_ITEM_SPAWN_POSITION, nil, {}, 1)
	end

	-- Update tracking variables
	last_item_spawned = item_type
	item_spawn_count = item_spawn_count + 1
end

function update(self, dt)
	self.item_spawn_timer = self.item_spawn_timer + dt
	if self.item_spawn_timer >= ITEM_SPAWN_INTERVAL then
		self.item_spawn_timer = 0
		spawn_item()
	end
end
