--[[ 
=============================================================================================

Lua Script File:  	main.script

Script Summary: Provides the general support functions related to game actions. This
script includes the following features:

- Initializes the GameState and sets main menu as the opening game level
- Serves as the Controller between the main menu, Level1, Level2, and Game Over (loading/unloading
collections; enabling/disabling GUIs and message control between game levels).

=============================================================================================
--]]

-- ------------------------------------------------------------------------------------------
-- Initialization 
-- ------------------------------------------------------------------------------------------
function init(self)	
    -- Set the main menu as the starting Game Level for this application
    msg.post(".", "start_main_menu")

    -- Set a Script Property with the initial GameState Status
    self.state = "MAIN_MENU"			
end

-- ------------------------------------------------------------------------------------------
-- Stop Sound Utility Function
-- ------------------------------------------------------------------------------------------
local function stop_current_level_sound(state)
    if state == "LEVEL1_RUNNING" then
        msg.post("main:/audio#sound", "stop_sound")
    elseif state == "LEVEL2_RUNNING" then
        msg.post("main:/audio#sound", "stop_sound")
    elseif state == "LEVEL3_RUNNING" then
        msg.post("main:/audio#sound", "stop_sound")
    elseif state == "MAIN_MENU" then
        msg.post("main:/audio#sound", "stop_sound")
    elseif state == "GAMEOVER_RUNNING" then
        msg.post("main:/audio#sound", "stop_sound")
    end
end

-- ------------------------------------------------------------------------------------------
-- Play Sound Utility Function
-- ------------------------------------------------------------------------------------------
local function play_main_menu_sound()
    -- Play the sound for the main menu screen
    msg.post("main:/audio#sound", "play_sound")
end

-- ------------------------------------------------------------------------------------------
-- Message Processing  
-- ------------------------------------------------------------------------------------------
function on_message(self, message_id, message, sender)
    -- Handling transitions between game levels

    -- When starting the main menu
    if message_id == hash("start_main_menu") then
        if self.state ~= "MAIN_MENU" then
            stop_current_level_sound(self.state)
            -- Unload other levels and game over screen if necessary
            if self.state == "LEVEL1_RUNNING" then
                msg.post("#level1_proxy", "unload")
            end

            if self.state == "LEVEL2_RUNNING" then
                msg.post("#level2_proxy", "unload")
            end

            if self.state == "LEVEL3_RUNNING" then
                msg.post("#level3_proxy", "unload")
            end

            if self.state == "GAMEOVER_RUNNING" then
                msg.post("#gameover_proxy", "unload")
            end
        end

        -- Enable the main menu
        msg.post("#main_menu", "enable")
        self.state = "MAIN_MENU"

        -- Play sound when transitioning to the main menu
        play_main_menu_sound()

        -- When starting level 1
    elseif message_id == hash("start_level1") then
        stop_current_level_sound(self.state)
        if self.state == "GAMEOVER_RUNNING" then
            msg.post("#gameover_proxy", "unload")
        end

        msg.post("#level1_proxy", "load")
        msg.post("#main_menu", "disable")
        self.state = "LEVEL1_RUNNING"

        -- When starting level 2
    elseif message_id == hash("start_level2") then
        stop_current_level_sound(self.state)
        if self.state == "GAMEOVER_RUNNING" then
            msg.post("#gameover_proxy", "unload")
        end

        msg.post("#level2_proxy", "load")
        msg.post("#main_menu", "disable")
        self.state = "LEVEL2_RUNNING"

        -- When starting level 3
    elseif message_id == hash("start_level3") then
        stop_current_level_sound(self.state)
        if self.state == "GAMEOVER_RUNNING" then
            msg.post("#gameover_proxy", "unload")
        end

        msg.post("#level3_proxy", "load")
        msg.post("#main_menu", "disable")
        self.state = "LEVEL3_RUNNING"

        -- When starting the game over screen
    elseif message_id == hash("start_gameover") then
        stop_current_level_sound(self.state)
        print("Opening game over screen")

        -- Unload the active level to free up resources
        if self.state == "LEVEL1_RUNNING" then
            msg.post("#level1_proxy", "unload")
        end

        if self.state == "LEVEL2_RUNNING" then
            msg.post("#level2_proxy", "unload")
        end

        if self.state == "LEVEL3_RUNNING" then
            msg.post("#level3_proxy", "unload")
        end

        -- Unload the main menu if it's active
        if self.state == "MAIN_MENU" then
            msg.post("#main_menu", "disable")
        end

        -- Now load the game over collection
        msg.post("#gameover_proxy", "load")
        self.state = "GAMEOVER_RUNNING"

        -- Handle proxy_loaded for collection enable
    elseif message_id == hash("proxy_loaded") then
        if sender == msg.url("#level1_proxy") then
            msg.post(sender, "enable")
            self.state = "LEVEL1_RUNNING"
        end

        if sender == msg.url("#level2_proxy") then
            msg.post(sender, "enable")
            self.state = "LEVEL2_RUNNING"
        end

        if sender == msg.url("#level3_proxy") then
            msg.post(sender, "enable")
            self.state = "LEVEL3_RUNNING"
        end

        if sender == msg.url("#gameover_proxy") then
            msg.post(sender, "enable")
            self.state = "GAMEOVER_RUNNING"
        end
    end    
end
